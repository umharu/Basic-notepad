/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package blocknotas;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Maximiliano
 */
public class BlockNotas extends javax.swing.JFrame {

    /**
     * Creates new form BlockNotas
     */
    public BlockNotas() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaNota = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuItemGuardar = new javax.swing.JMenuItem();
        jMenuItemGuardarComo = new javax.swing.JMenuItem();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemCopiar = new javax.swing.JMenuItem();
        jMenuItemCortar = new javax.swing.JMenuItem();
        jMenuItemPegar = new javax.swing.JMenuItem();
        jMenuFormato = new javax.swing.JMenu();
        jMenuItemAjusteDeLinea = new javax.swing.JMenuItem();
        jMenuItemFuente = new javax.swing.JMenuItem();
        jMenuVer = new javax.swing.JMenu();
        jMenuItemZoom = new javax.swing.JMenuItem();
        jMenuItemBarraDeEstado = new javax.swing.JMenuItem();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuItemAcercade = new javax.swing.JMenuItem();

        jMenuItem4.setText("jMenuItem4");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Bloc de Notas - Sin Titulo");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        TextAreaNota.setColumns(20);
        TextAreaNota.setRows(5);
        TextAreaNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextAreaNotaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(TextAreaNota);

        jMenuArchivo.setText("Archivo");
        jMenuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuArchivoActionPerformed(evt);
            }
        });

        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemNuevo);

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemAbrir);

        jMenuItemGuardar.setText("Guardar");
        jMenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardar);

        jMenuItemGuardarComo.setText("Guardar Como...");
        jMenuItemGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarComoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardarComo);

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemSalir);

        jMenuBar1.add(jMenuArchivo);

        jMenu2.setText("Edición");

        jMenuItemCopiar.setText("Copiar");
        jMenuItemCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCopiarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCopiar);

        jMenuItemCortar.setText("Cortar");
        jMenuItemCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCortarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemCortar);

        jMenuItemPegar.setText("Pegar");
        jMenuItemPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPegarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemPegar);

        jMenuBar1.add(jMenu2);

        jMenuFormato.setText("Formato");

        jMenuItemAjusteDeLinea.setText("Ajuste de línea");
        jMenuItemAjusteDeLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAjusteDeLineaActionPerformed(evt);
            }
        });
        jMenuFormato.add(jMenuItemAjusteDeLinea);

        jMenuItemFuente.setText("Fuente...");
        jMenuItemFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFuenteActionPerformed(evt);
            }
        });
        jMenuFormato.add(jMenuItemFuente);

        jMenuBar1.add(jMenuFormato);

        jMenuVer.setText("Ver");

        jMenuItemZoom.setText("Zoom");
        jMenuVer.add(jMenuItemZoom);

        jMenuItemBarraDeEstado.setText("Barra de estado ");
        jMenuItemBarraDeEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBarraDeEstadoActionPerformed(evt);
            }
        });
        jMenuVer.add(jMenuItemBarraDeEstado);

        jMenuBar1.add(jMenuVer);

        jMenuAyuda.setText("Ayuda");

        jMenuItemAcercade.setText("Acerca de ...");
        jMenuItemAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAcercadeActionPerformed(evt);
            }
        });
        jMenuAyuda.add(jMenuItemAcercade);

        jMenuBar1.add(jMenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        if(!Preguntar())
            return;
        
        TextAreaNota.setText(null);
        modificado = false;
        this.setTitle("Bloc de Notas - Sin Titulo");
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        Salir();
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItemGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarComoActionPerformed
        if(!GuardarComo())
            return;
        
        Guardar();
        modificado = false;
    }//GEN-LAST:event_jMenuItemGuardarComoActionPerformed

    private void jMenuItemCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCopiarActionPerformed
        TextAreaNota.copy();
    }//GEN-LAST:event_jMenuItemCopiarActionPerformed

    private void jMenuItemCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCortarActionPerformed
        TextAreaNota.cut();
    }//GEN-LAST:event_jMenuItemCortarActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
       FileReader lectura;
     JFileChooser selector = new JFileChooser();
      if(!Preguntar())
            return;
     
     int respuesta = selector.showOpenDialog(this);
     
     if (respuesta ==JFileChooser.CANCEL_OPTION)
         return;
     
     archivo = selector.getSelectedFile();
        try {
            lectura = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error al abrir el archivo.");
            return;
        }
        
        try {
            TextAreaNota.read(lectura, evt);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al leer el archivo");
        }
        modificado = false;
        this.setTitle("Bloc de Notas - " +  archivo.getName());
    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void jMenuItemPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPegarActionPerformed
        TextAreaNota.paste();
    }//GEN-LAST:event_jMenuItemPegarActionPerformed

    private void jMenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarActionPerformed
        if (archivo == null){
            if(!GuardarComo())
            return;
        }
        
        Guardar();
        
    }//GEN-LAST:event_jMenuItemGuardarActionPerformed

    private void TextAreaNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextAreaNotaKeyTyped
        modificado = true;
        if(!this.getTitle().endsWith("*"))
            this.setTitle(this.getTitle()+"*");//Titulo 
        if (TextAreaNota.getText().isEmpty() && this.archivo == null){
        this.modificado = false;
        }
    }//GEN-LAST:event_TextAreaNotaKeyTyped

    private void jMenuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuArchivoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       Salir();
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItemAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAcercadeActionPerformed
        JOptionPane.showMessageDialog(null,"Created by:\n Roldan Capponi Maximiliano");
    }//GEN-LAST:event_jMenuItemAcercadeActionPerformed

    private void jMenuItemAjusteDeLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAjusteDeLineaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemAjusteDeLineaActionPerformed

    private void jMenuItemBarraDeEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBarraDeEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemBarraDeEstadoActionPerformed

    private void jMenuItemFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFuenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemFuenteActionPerformed

    
    private boolean GuardarComo(){
      
        JFileChooser selector = new JFileChooser();
        
        int respuesta = selector.showSaveDialog(this);
        
        if (respuesta == JFileChooser.CANCEL_OPTION)
            return false;
        archivo = selector.getSelectedFile();
        return true;
    }
    private void Guardar(){
                FileWriter escribir = null;
       
        try {
            escribir = new FileWriter(archivo);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al abrir el archivo.");
            return;
        }
        
        try {
            TextAreaNota.write(escribir);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al grabar el archivo.");
        }
        modificado = false;
        this.setTitle("Bloc de Notas - " + archivo.getName());
    
    }
    
    private boolean Preguntar() {
                if (modificado){
        int retorno = JOptionPane.showConfirmDialog(this,"¿Desea guardar el archivo?","Bloc de Notas",JOptionPane.YES_NO_CANCEL_OPTION);
        if (retorno == JOptionPane.CANCEL_OPTION)
                return false;
        if (retorno == JOptionPane.YES_OPTION){
        if (archivo == null){
            if(!GuardarComo())
                return false;
        }
                Guardar();
        }
        }
                return true;
    }

    
    
    private void Salir() {
         if(!Preguntar())
            return;
        System.exit(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlockNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlockNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlockNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlockNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlockNotas().setVisible(true);
            }
        });
    }
    
    private boolean modificado = false;
    
    
    private File archivo = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextAreaNota;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFormato;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenuItem jMenuItemAcercade;
    private javax.swing.JMenuItem jMenuItemAjusteDeLinea;
    private javax.swing.JMenuItem jMenuItemBarraDeEstado;
    private javax.swing.JMenuItem jMenuItemCopiar;
    private javax.swing.JMenuItem jMenuItemCortar;
    private javax.swing.JMenuItem jMenuItemFuente;
    private javax.swing.JMenuItem jMenuItemGuardar;
    private javax.swing.JMenuItem jMenuItemGuardarComo;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JMenuItem jMenuItemPegar;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemZoom;
    private javax.swing.JMenu jMenuVer;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables



}
